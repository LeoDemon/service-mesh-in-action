apiVersion: v1
kind: ConfigMap
metadata:
  name: ngx-curl-conf
  namespace: istio-dev

data:
  default.conf: |
    server {
      listen       80;
      listen  [::]:80;
      server_name  localhost;

      #access_log  /var/log/nginx/host.access.log  main;

      location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
      }

      location /srvinfo {
        default_type text/plain;
        return 200
          'srv : $server_addr:$server_port\nhost: $hostname\nuri : $request_method $host $request_uri\ndate: $time_iso8601\n';
      }

      #error_page  404              /404.html;

      # redirect server error pages to the static page /50x.html
      #
      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
          root   /usr/share/nginx/html;
      }

      location /ngx-istio {
          proxy_pass   http://ngx-istio:8080/;
          proxy_http_version 1.1;
      }

      location /stu {
          proxy_pass   http://student:8080/;
          proxy_http_version 1.1;
      }

      # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
      #
      #location ~ \.php$ {
      #    root           html;
      #    fastcgi_pass   127.0.0.1:9000;
      #    fastcgi_index  index.php;
      #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
      #    include        fastcgi_params;
      #}

      # deny access to .htaccess files, if Apache's document root
      # concurs with nginx's one
      #
      #location ~ /\.ht {
      #    deny  all;
      #}
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: ngx-curl
  name: ngx-curl
  namespace: istio-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ngx-curl
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ngx-curl
    spec:
      volumes:
        - name: ngx-curl-conf-vol
          configMap:
            name: ngx-curl-conf
      containers:
        - image: nginx:1.22.1-alpine
          name: nginx
          ports:
            - containerPort: 80
          resources: {}
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: ngx-curl-conf-vol
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ngx-curl
  name: ngx-curl
  namespace: istio-dev
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: ngx-curl
  type: ClusterIP
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: ngx-curl
  namespace: istio-dev
spec:
  hosts:
    - ngx-curl
  http:
    - route:
      - destination:
          host: ngx-curl
      #retries:
      #  attempts: 3
      #  perTryTimeout: 2s
      #timeout: 3s

